Top := Or ";;"      {PK_top}
  | DefV ";;"       {PK_top},

DefV := "let" Id "=" Or  {PK_defv},

Or := And             {PK_null}
  | Or "||" And       {PK_or},

And := Comp            {PK_null}
  | And "&&" Comp      {PK_and},

Comp := Add           {PK_null}
  | Comp "=" Add       {PK_eq}
  | Comp "<>" Add      {PK_neq}
  | Add ">" Add       {PK_large}
  | Add "<" Add       {PK_small},

Add := Mul            {PK_null}
  | "-" Prim          {PK_unary}
  | Add "+" Mul       {PK_add}
  | Add "-" Mul       {PK_sub},

Mul := Prim           {PK_null}
  | Mul "*" Prim      {PK_mul}
  | Mul "/" Prim      {PK_div},
  
Prim := "(" Or ")"    {PK_null}
  | Int               {PK_lit}
  | "true"            {PK_lit}
  | "false"           {PK_lit}
  | Id                {PK_null},

Id := Ident           {PK_lit}